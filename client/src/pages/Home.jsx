import React,{useState,useEffect} from 'react'
import {FormField,Loader,Card} from "../components/index.js"
import { useSelector,useDispatch } from 'react-redux'
import { getPost } from '../redux/features/postSlice.js'
const RenderCards = ({data,title}) => {
  if(data?.length > 0){
    return(
      data.map((post) =><Card key={post._id} {...post}/>).reverse()
    ) 
  }

  return (
    <h2 className="mt-5 font-bold text-[#6449ff] text-xl uppercase">
      {title}
    </h2>
  )
}

const Home = () => {

  const [searchText, setsearchText] = useState('');
  const [searchedResults,setSearchedResults] = useState(null)
  const [searchTimout,setSearchTimeout] = useState(null)

  const dispatch = useDispatch();
  const {data,loading} = useSelector((state) => state.post)

  useEffect(()=>{
    dispatch(getPost());
  },[])

  const handleSearchChange = (e) => {
    clearTimeout(searchTimout);
    setsearchText(e.target.value);

    setSearchTimeout(
      setTimeout(()=>{
        const searchResults = data.filter((items) => items.name.toLowerCase()
        .includes(searchText.toLocaleLowerCase()) || items.prompt.toLocaleLowerCase().includes(
          searchText.toLocaleLowerCase()));
        console.log(searchResults);
        setSearchedResults(searchResults);
      },500)
    )
  }
  
  return (
    <section className="mx-w-7xl mx-auto">
      <div>
        <h1 className="font-extrabold text-[#222328] text-[32px]">
        The Community Showcase
        </h1>
        <p className="mt-2 text-[#666e75] text-[16px] max-w-[500px]">Browse through a collection of imaginative and visually
        stunning images generated by DALLE-E AI</p>
      </div>

      <div className="mt-16">
        <FormField
          LabelName="Search posts"
          type="text"
          name="text"
          placeholder="Search posts"
          value={searchText}
          handleChange={handleSearchChange}
        />
      </div>

      <div className="mt-10">
        {loading ? (
          <div className="flex justify-center items-center">
          <Loader/>
          </div>
        ):(
          <>
            {searchText && (
              <h2 className="font-medium text-[#666e75]
              text-xl mb-3">
                Showing results for <span className=""
                >{searchText}</span>
              </h2>
            )}
            <div className="grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3">
                {searchText ? (
                  <RenderCards 
                    data={searchedResults}
                    title="No search results found"
                  />
                ) : (
                  <RenderCards
                    data={data.data}
                    title="No posts found"
                  />
                )}

            </div>
          </>
        )}
      </div>
    </section>
  )
}

export default Home